@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using MediatR
@using DAPR.Test.Frontend.Data
@using DAPR.Test.ApplicationLogic.GetAllWeatherForecasts

@inject IMediator Mediator
@inject ILogger<FetchData> Logger  

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private IEnumerable<GetAllWeatherForecasts.Model>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        Logger.LogDebug("Request forecasts from backend");
        forecasts = await Mediator.Send(new GetAllWeatherForecasts.Query());
        Logger.LogDebug("Got answer from Backend" + forecasts?.First().TemperatureC.ToString(), forecasts);
    }

}

